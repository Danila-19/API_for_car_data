Тестовое задание: Разработка API для сбора и фильтрации данных об автомобилях
Описание задачи:
Вам необходимо разработать RESTful API для сбора данных об автомобилях и реализации фильтров по различным параметрам. API должно поддерживать следующие функции:
Добавление нового автомобиля:
Марка
Модель
Год выпуска
Тип топлива (бензин, дизель, электричество, гибрид)
Тип КПП (механическая, автоматическая, вариатор, робот)
Пробег
Цена
Получение списка автомобилей с фильтрами:
По марке
По модели
По году выпуска
По типу топлива
По типу КПП
По пробегу (диапазон)
По цене (диапазон)
Получение деталей конкретного автомобиля по ID.
Требования:
Использовать Python и фреймворк Django или FastAPI.
Использовать базу данных SQLite или PostgreSQL.
Реализовать валидацию данных.
Обеспечить обработку ошибок и возвращение соответствующих HTTP статусов.

Примеры эндпоинтов:


Добавление автомобиля:

POST /api/cars/ 

Response:
{ "brand": "Toyota", "model": "Camry", "year": 2020, "fuel_type": "бензин", "transmission": "автоматическая", "mileage": 50000, "price": 25000 }
Получение списка автомобилей по фильтрам:

GET /api/cars/?brand=Toyota&model=Camry&year=2020&fuel_type=бензин&transmission=автоматическая&mileage_min=40000&mileage_max=60000&price_min=20000&price_max=30000
Дополнительные задания (по желанию):
Реализовать аутентификацию и авторизацию для защиты API.
Добавить возможность обновления и удаления автомобилей.
Реализовать пагинацию для списка автомобилей.
Предоставить документацию по API (например, с использованием Swagger).
Оценка:
Качество кода и архитектура решения.
Правильность реализации функционала.
Обработка ошибок и валидация данных.
Документация API.
Производительность и масштабируемость решения.

